#!/usr/bin/env ruby

require_relative '../lib/secret'

def print_usage!
  puts "usage: secret command [args]"
  puts ""
  puts "  commands:"
  puts "    create   break a secret up into shares"
  puts "    restore  combine shares to recreate secret"
  puts ""
  puts "  usage: create shares required secret"
  puts "    shares    number of secret shares to create"
  puts "    required  number of shares required to recreate"
  puts "    secret    string to split into shares"
  puts ""
  puts "  usage: restore *shares"
  puts "    pass in shares as arguments"
  exit 0
end

case ARGV[0]
when 'create'
  print_usage! if ARGV.length < 4

  begin
    shares = Secret.create(ARGV[3..-1].join(' '),
                           shares: ARGV[1].to_i,
                           required: ARGV[2].to_i)
    shares.each { |share| puts share }
  rescue ArgumentError => e
    print 'Unable to create secret shares: '
    puts e
    exit 1
  end
when 'restore'
  begin
    puts Secret.restore(ARGV[1..-1])
  rescue StandardError => e
    print 'Unable to restore secret from input: '
    puts e
    exit 1
  end
else
  print_usage!
end
